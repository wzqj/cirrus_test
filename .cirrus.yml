env: # Environt variable to pass to all tasks
    CIRRUS_CLONE_DEPTH: 1 # No need to clone with whole history

    # For rclone with google drive or any cloud! After first commit pushing, login to https://cirrus-ci.com , click top left corner 3 dot menu, click repository(yourname/aosp-builder) > Repository Settings > Secured Variables > enter content of ~/.config/rclone/rclone.conf (from pc where you setup rclone) > ENCRYPT, copy that ENCRYPTED hash
    # ENCRYPTED variables is unique for every repository, so you cant use my one, create you rclone config https://rclone.org/drive/#making-your-own-client-id
    rclone_config: "" 

task:
    name: task1 # Project name
    timeout_in: 2m # Otherwise it will timeout at 60m automatically, 120m highest in free account
    container:
      image: ubuntu:latest # It has built in setup environment + repo, aria2, rclone, pigz, username ci, and email ci@ci.ci [You can use your own docker image if you want, or you can use this one too!]
      cpu: 2  #8 cpu for dummy build, 10 or more cpu for final build, sometimes more than 8 cpu will cause a timelock, so you wont be able to run ci again within few hours, in build script use -j8 or -j10 depending what you used here, otherwise low memory issue will happen, 16cpu highest
      memory: 4G # So that we can have ram when needed, 24G highest
    ccache_cache:
      folders: test_cache, test1_cache
      populate_script:
        - touch testfile1
    test_script: # To download ccache in background
      - env
      - mount
      - touch testfile2
      - pwd
      - ls -lah

task:
    name: task2 # Project name
    timeout_in: 2m # Otherwise it will timeout at 60m automatically, 120m highest in free account
    container:
      image: ubuntu:latest # It has built in setup environment + repo, aria2, rclone, pigz, username ci, and email ci@ci.ci [You can use your own docker image if you want, or you can use this one too!]
    test_script: # To download ccache in background
      - env
      - mount
      - touch testfile2
      - pwd
      - ls -lah
      - ls -lah test_cache
      - ls -lah test1_cache
      
